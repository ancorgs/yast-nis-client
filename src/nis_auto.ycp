/**
 * File:	clients/lan_proposal.ycp
 * Package:	Network configuration
 * Summary:	Lan configuration proposal
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "nis";

import "Nis";
include "nis/ui.ycp";

/* The main () */
y2milestone("----------------------------------------");
y2milestone("NIS client autoinst client started");
any ret = nil;
string func = "";
map param = $[];


/* Check arguments */
if(size(Args()) > 0 && is(Args(0), string)) {
    func = WFM::Args(0);
    if(size(Args()) > 1 && is(Args(1), map))
    param = WFM::Args(1);
}
y2debug("func=%1", func);
y2debug("param=%1", param);

/* Import data*/
if(func == "Import") {
	ret = Nis::Import(param);
}
/* create a  summary*/
else if(func == "Summary") {
    ret =  Nis::Summary();
}
else if (func == "Reset") {
	Nis::Import($[]);
	ret = $[];
}
else if (func == "Change") {
	ret = AutoSequence();
}
else if (func == "Read") {
	ret = Nis::Read();
}
else if (func == "Export") {
	ret = Nis::Export();
}
else if (func == "Packages") {
	ret = Nis::AutoPackages();
}
else if (func == "Write") {
    import "Progress";
    Progress::off();
    ret = Nis::WriteOnly();
    Progress::on();

}

/* unknown function */
else {
    y2error("unknown function: %1", func);
	ret =  false;
}

/* Finish */
y2debug("ret=%1", ret);
y2milestone("NIS client autoinit client finished");
y2milestone("----------------------------------------");

return ret;
/* EOF */
}
